@using ForthAssignment.Core.Aplication.Utils.UserSessionHandler;
@using ForthAssingnment.Presentation.WepApp.Models
@inject IHttpContextAccessor httpcontext;
@{
    ForthAssignment.Core.Aplication.Models.User.UserModel User = httpcontext.HttpContext.Session.Get<ForthAssignment.Core.Aplication.Models.User.UserModel>("user");
}
@model List<ForthAssignment.Core.Aplication.Models.Post.PostModel>

﻿﻿
@if (ViewBag.MessageError is not null)
{
    <p class="alert-danger d-block text-center">@ViewBag.MessageError</p>
}
@if (ViewBag.MessageSucces is not null)
{
    <p class=" alert alert-success d-block text-center" role="alert">@ViewBag.MessageSucces</p>
}
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-4">
            <div class="card mb-4">
                <h3 class="text-center">Find a new friend</h3>
                <div class="card-body">
                    <form asp-action="FindUserName" asp-controller="User" method="post" enctype="multipart/form-data">
                        <div class="form-group d-inline">
                            <input class="form-control d-inline" name="username" required></input>
                        </div>
                        <div class="form-group text-right mt-2">
                            <button type="submit" class="btn btn-primary d-inline end-0">Find a user to befriend</button>
                        </div>
                    </form>
                </div>
            </div>

            @* Include the friend list partial view *@
            @await Html.PartialAsync("FriendList", new UserFriendViewModel{ UsersFriends =User.FriendsOfthUser , Users =User.UserFriends })
        </div>

        <div class="col-md-8">
            @* Your existing posts rendering code... *@
            @foreach (var post in Model)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-2">
                            <img src="@Url.Content(post.UserThatPostThis.ProfileImageUrl ?? "/Images/default-profile/default.png")" alt="Profile Picture" class="rounded-circle" width="50" height="50" onerror="this.onerror=null; this.src='/images/default-profile.png';">
                            <div class="ml-3">
                                <h5 class="card-title mb-0">@post.UserThatPostThis.UserName @post.UserThatPostThis.LastName</h5>
                                <small class="text-muted">@post.DateCreated.ToString("g")</small>
                            </div>
                        </div>
                        <p class="card-text">@post.PostText</p>
                        @if (!string.IsNullOrEmpty(post.PostImgUrl))
                        {
                            <img src="@post.PostImgUrl" class="img-fluid w-100" alt="Post Image">
                        }
                        else if (!string.IsNullOrEmpty(post.VideoUrl))
                        {
                            <div class="embed-responsive embed-responsive-16by9">
                                <iframe class="embed-responsive-item w-100 " style=" height:500px;" src="@post.VideoUrl" allowfullscreen allow="autoplay"></iframe>
                            </div>
                        }
                    </div>

                    <div class="card-footer text-muted">
                        <span>@post.Comments.Count() comments</span>
                        @if (User.Id == post.UserThatPostThis.Id)
                        {
                            <a href="@Url.Action("EditPost", "Post", new { id = post.Id })" type="button" class="btn btn-sm btn-outline-secondary">Update</a>
                            <a href="@Url.Action("DeletePost", "Post", new { id = post.Id })" type="button" class="btn btn-sm btn-outline-danger">Delete</a>
                        }
                    </div>
                    @if (User.Id != post.UserThatPostThis.Id)
                    {
                        <div class="card mt-3">
                            <div class="card-body">
                                <form asp-action="PostANewComment" asp-controller="Comment" method="post" enctype="multipart/form-data">
                                    <input type="hidden" name="PostId" value="@post.Id"></input>
                                    <input type="hidden" name="num" value="2"></input>
                                    <div class="form-row align-items-center">
                                        <div class="col-auto">
                                            <input type="text" class="form-control" name="CommentText" placeholder="Add a comment..." required>
                                        </div>
                                        <label class="custom-file-label" for="File">Add image</label>
                                        <div class="col-auto">
                                            <input type="file" class="form-control-file" name="File" />
                                        </div>
                                        <div class="col-auto">
                                            <button type="submit" class="btn btn-primary">Comment</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    }

                    <div class="card mt-3">
                        <div class="card-body">
                            @foreach (var comment in post.Comments)
                            {
                                if (comment.CommentRespondingTo == default(Guid))
                                {
                                    @await Html.PartialAsync("CommentList", comment)
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>